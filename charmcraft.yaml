# Copyright 2022 Jon Seager
# See LICENSE file for licensing details.
name: parca-k8s
summary: Parca continuous profiling tool.
description: |
  Continuous profiling for analysis of CPU and memory usage, down to the line number and throughout
  time. Saving infrastructure cost, improving performance, and increasing reliability.

type: "charm"
base: ubuntu@24.04
platforms:
  amd64:

parts:
  charm:
    build-snaps:
      - rustup
      - astral-uv
    override-build: |
      rustup toolchain install stable
      make generate-requirements
      craftctl default

assumes:
  - juju >= 3.1

containers:
  parca:
    resource: parca-image
    mounts:
      - storage: profiles
        location: /var/lib/parca

resources:
  parca-image:
    type: oci-image
    description: OCI image for parca
    # Included for simplicity in integration tests
    upstream-source: ghcr.io/parca-dev/parca:v0.22.0

storage:
  profiles:
    type: filesystem

requires:
  catalogue:
    interface: catalogue
    description: Display parca entry in the COS catalogue frontend.
  profiling-endpoint:
    interface: parca_scrape
    description: |
      Integration to configure parca to scrape a profiling endpoint from a related charm.
  ingress:
    interface: ingress
    limit: 1
    description: |
      Expose parca's UI and push API endpoint over an ingress.
  external-parca-store-endpoint:
    interface: parca_store
    description: |
      Push profiles from this parca server to a remote parca server.
  charm-tracing:
    description: |
      Enables sending charm traces to a distributed tracing backend such as Tempo.
    limit: 1
    interface: tracing
    
provides:
  grafana-dashboard:
    interface: grafana_dashboard
    description: |
      This integration provisions a grafana dashboard to monitor this charm.
  grafana-source:
    interface: grafana_datasource
    description: |
      This integration configures this parca server as a datasource on a grafana instance.
  metrics-endpoint:
    interface: prometheus_scrape
    description: |
      Endpoint to allow prometheus metrics to be scraped from this parca instance.
  self-profiling-endpoint:
    interface: parca_scrape
    description: |
      The profiling endpoint at which profiles for this parca instance are served.
  parca-store-endpoint:
    interface: parca_store
    description: |
      Endpoint at which profiles can be pushed by, for example, a remote parca server or parca-agent.

peers:
  parca-peers:
    interface: parca_peers

config:
  options:
    enable-persistence:
      description: |
        Do not store profiles in memory, persist to disk. Location for persistence is '/var/lib/parca'
      type: boolean
      default: false

    memory-storage-limit:
      description: |
        When storing profiles in memory, configure the in-memory storage limit, specified in MB.

        Does nothing if enable-persistence is True.
      type: int
      default: 4096
